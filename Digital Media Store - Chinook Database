# This project utilized a digital media store database called Chinook with 11 tables:
    albums
    artists
    customers
    employees
    genres
    invoice_items
    invoices
    media_types
    playlist_track
    playlists
    tracks

# The full database schema can be viewed through this photo link: https://ibb.co/THCtDFY

# The following SQL was used to explore the database in SQLite:

# 1. Show the artist name with their albums and the tracklist per album

SELECT
    at.Name AS artist,
    a.Title AS album,
    t.Name AS track_name
FROM tracks t
JOIN albums a
ON a.AlbumId = t.AlbumId
JOIN artists at
ON at.ArtistId = a.ArtistId;

# 2. Show a list of employees alongside their immediate supervisors

SELECT 
    e.FirstName AS employee_first_name,
    e.LastName AS employee_last_name,
    s.FirstName AS supervisor_first_name,
    s.LastName AS supervisor_last_name
FROM employees e
LEFT JOIN employees s
ON e.ReportsTo = s.EmployeeId;

# 3. Show the total sales made by each sales support agent

SELECT
    e.FirstName,
    e.LastName,
    ROUND(SUM(i.Total), 2) AS sales
FROM employees e
JOIN customers c
ON c.SupportRepId = e.EmployeeId
JOIN invoices i
ON i.CustomerId = c.CustomerID
WHERE e.title = 'Sales Support Agent'
GROUP BY e.FirstName, e.LastName;

# 4. Show the customer ID and full name of the number one fan of each artist based on track purchases

WITH ranking AS (
    SELECT
        c.CustomerId AS cust_id,
        c.FirstName AS first_name,
        c.LastName AS last_name,
        at.Name AS artist,
        COUNT(it.TrackId) AS TrackPurchases,
        DENSE_RANK() OVER(PARTITION BY at.Name ORDER BY COUNT(it.TrackId) DESC) AS rank
    FROM customers c
    JOIN invoices inv ON inv.CustomerId = c.CustomerId
    JOIN invoice_items it ON it.InvoiceId = inv.InvoiceId
    JOIN tracks t ON t.TrackId = it.TrackId
    JOIN albums al ON al.AlbumId = t.AlbumId
    JOIN artists at ON at.ArtistId = al.ArtistId
    GROUP BY c.CustomerID, c.FirstName, c.LastName, at.Name
)

SELECT
    cust_id,
    first_name,
    last_name,
    artist,
    TrackPurchases
FROM ranking
WHERE rank = 1;

# 5. Provide a query that will show the ID and names of customers that purchased all tracks of an album

WITH tracks_per_order AS (
        SELECT DISTINCT
            c.CustomerId AS customer_id,
            c.FirstName AS first_name,
            c.LastName AS last_name,        
            ab.Title AS album_title,
            COUNT(it.TrackId) AS track_count_per_order
        FROM customers c
        JOIN invoices inv ON inv.CustomerId = c.CustomerId
        JOIN invoice_items it ON it.InvoiceId = inv.InvoiceId
        JOIN tracks t ON t.TrackId = it.TrackId
        JOIN albums ab ON ab.AlbumId = t.AlbumId
        GROUP BY ab.Title, c.CustomerId, c.FirstName, c.LastName
        ),

  tracks_per_album AS (
        SELECT 
            COUNT(t.TrackId) AS track_count_per_album,
            ab.title AS album_title
        FROM albums ab
        JOIN tracks t ON ab.AlbumId = t.AlbumId
        GROUP BY ab.title
)

SELECT
    customer_id,
    first_name,
    last_name,
    t1.album_title,
    track_count_per_order
FROM tracks_per_order t1
JOIN tracks_per_album t2
ON t1.track_count_per_order = t2.track_count_per_album
AND t1.album_title = t2.album_title;    

# 6. Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name. 

SELECT
    e.FirstName,
    e.LastName,
    i.InvoiceId
FROM employees e
JOIN customers c
ON c.SupportRepId = e.EmployeeId
JOIN invoices i
ON i.CustomerId = c.CustomerID
WHERE e.title = 'Sales Support Agent';

# 7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers

SELECT
    c.FirstName,
    c.LastName,
    i.BillingCountry,
    i.Total,
    e.FirstName,
    e.LastName
FROM employees e
JOIN customers c
ON c.SupportRepId = e.EmployeeId
JOIN invoices i
ON i.CustomerId = c.CustomerID
WHERE e.title = 'Sales Support Agent';

# 8. Write a query that includes the purchased track name and artist name with each invoice line ID

SELECT
    t.Name,
    at.Name,
    it.InvoiceLineId
FROM customers c
JOIN invoices i ON i.CustomerId = c.CustomerId
JOIN invoice_items it ON it.InvoiceId = i.InvoiceId
JOIN tracks t ON t.TrackId = it.TrackId
JOIN albums ab ON ab.AlbumId = t.AlbumId
JOIN artists at ON at.ArtistId = ab.AlbumId;
