# This project utilized Spotify data downloaded from Kaggle.com: https://www.kaggle.com/datasets/equinxx/spotify-top-50-songs-in-2021

# I first created a table in the database into which I will insert the downloaded Spotify data (.csv):

CREATE TABLE BIT_DB.Spotifydata (
  id integer PRIMARY KEY,
  artist_name varchar NOT NULL,
  track_name varchar NOT NULL,
  track_id varchar NOT NULL,
  popularity integer NOT NULL,
  danceability decimal(4,3) NOT NULL,
  energy decimal(4,3) NOT NULL,
  song_key integer NOT NULL,
  loudness decimal(5,3) NOT NULL,
  song_mode integer NOT NULL,
  speechiness decimal(5,4) NOT NULL,
  acousticness decimal(6,5) NOT NULL,
  instrumentalness decimal(8,7) NOT NULL,
  liveness decimal(5,4) NOT NULL,
  valence decimal(4,3) NOT NULL,
  tempo decimal(6,3) NOT NULL,
  duration_ms integer NOT NULL,
  time_signature integer NOT NULL 
)

# I explored the data using the following SQL:

# Show the names of the top ten artists based on average popularity across all songs

SELECT DISTINCT 
    artist_name 
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING AVG(popularity) > 90
ORDER BY popularity DESC
LIMIT 10;

# Show the track name, artist name, and the average danceability of the top ten tracks with an average popularity greater than 90

SELECT
    artist_name,
    track_name,
    AVG(danceability) AS avg_danceability
FROM Spotifydata
GROUP BY artist_name, track_name
HAVING AVG(popularity) > 90
ORDER BY popularity DESC, avg_danceability DESC
LIMIT 10;

# Calculate the average popularity for the artists in the Spotify data table. 
# Then, for every artist with an average popularity of 90 or above, show their name and their average popularity

WITH popularity AS (
SELECT 
    artist_name,
    AVG(popularity) AS avg_popularity
FROM Spotifydata
GROUP BY artist_name
)
    
SELECT 
    artist_name,
    avg_popularity
FROM popularity
WHERE avg_popularity > 90
ORDER BY avg_popularity DESC;

# For each artist, show the number of tracks with a popularity greater than 90; the total number of tracks; and the percentage of popular tracks vs total tracks

SELECT
    DISTINCT artist_name,
    COUNT(CASE WHEN popularity > 90 THEN track_id ELSE NULL END) AS popular_track_count,
    COUNT(track_id) AS track_count,
    ROUND(COUNT(CASE WHEN popularity > 90 THEN track_id ELSE NULL END) /
        CAST(COUNT(track_id) as REAL) * 100, 2) || '%' AS popular_track_percentage
FROM Spotifydata
GROUP BY artist_name;
      


